Hola a todos, gracias por venir a escuchar la presentación de mi practica y muchas gracias por la oportunidad de estar aquí con vosotros. Me enseñaron muchas cosas que me van a servir para mi carrera universitaria y en el trabajo en el futuro.


En breve, mis dos meses de practica aquí en el Santander se pasaron trabajando en un proyecto personal en el ámbito de generative AI, y el proceso se puede dividir en 6 categorías: elegir un caso de uso, diseñar el flow del programa, averiguar la architectura que necesitaría, desarrollar el programa, probar y cambiar como sea necesario, y por ultimo presentar y colaborar para expandir el proyecto. Como pueden ver, cada etapa tiene un periodo de tiempo y unos temas que yo pienso son los mas importantes, y los que están destacados son los principales los que me tomaron mas tiempo. Durante la presentación, me enfocare en todas estas partes y lo que aprendi en cada una, empezando con los casos de uso.

En esta practica yo quería trabajar con algo de lo que estoy estudiando en la universidad. Por eso decidi trabajar con Generative AI, porque es algo que me interesa y es parte de mis estudios. Claro el tema de Gen AI es muy amplio, asi que tuve que generar algunos casos de uso con el propósito de descartar y quedarme con uno. 


Esta fue una de las partes mas difíciles aunque no tarde mucho en terminarla. Tenia algunas ideas muy simples o que no eran nuevas, y tenia varias que no eran muy factibles con el tiempo y la technologia que tenia. Algunas de las ideas por ejemplo fueron crear un programa de reconocimiento facial para la gente que entra y sale del banco. Otra fue crear un mapa de calor para analizar el trafico de la oficina, y por ultimo intentar crear un asistente virtual. Al final lo que decidimos fue como adjuntar un poco de todas estas ideas y crear un mapa de oficina que detecte lo que este ocupado y lo que este libre.

Imagínense las luces verdes y rojas que tienen los aparcamientos del supermercado por ejemplo, eso es lo que pensé con esta idea. Esta foto como se puede ver tiene las cajas de diferentes colores que detectan los puestos y si están ocupados. Este caso de uso me parecio obtenible, pero mas importante tenia posibilidades de expansión mas allá de el ambiente de la oficina.


Ya cuando tuve esta idea principal, nos movimos al diseño del programa y como iba a funcionar. 

En general, el programa se divide en tres partes. En orden, paso uno pasa localmente porque requiere una captura de imagen, por ejemplo usando la misma webcam del dispositivo o una cámara cualquiera. Esta foto de la oficina se usa en el segundo paso de análisis de imagen, que se hace todo con los recursos de Azure, y este proceso produce unos resultados. Estos mismos se bajan de los programas de Azure para trabajar con ellos localmente en la visualización en el mapa, usando Power BI. Básicamente con esto el programa esta listo, claro entremedias de estos pasos se usan otros programas, y aquí me pase un tiempo aprendiendo sobre Azure para poder crear este modelo de dataflow más en detalle junto con Nico.


Como se puede ver se divide igual en los mismos tres pasos, solo que este modelo tiene más detalles de la arquitectura y los programas necesarios.  

Oficialmente entonces empezó la parte del desarrollo, la parte divertida. 


Para empezar con un poco de lo técnico, una de las primeras ideas que tuve fue tener una especie de video como livestream donde se haría la visualización directamente, y se actualizara constantemente. Aunque sea posible, nos dimos cuenta que no es necesario para lo que queríamos y el gasto de recursos hubiera sido muy alto, y por eso es que decidi usar un timer trigger para correr el programa. El trigger es una function de azure que le dice a la cámara que tome la foto de la oficina cada 5 minutos o el tiempo que quieras, lo cual deja que el mapa este actualizado pero sin mucho gasto. Del mismo modo, la foto se sube a un storage de Azure para ahorrar recursos locales, osea el espacio y el rendimiento del equipo que se usa. 

La foto es posiblemente la parte mas importante, y yo trabaje con fotos que tenían una perspectiva desde un lado, como se ve en el ejemplo paso 2. De este modo funciona, pero la razón que digo que es la parte mas importante es porque con esta perspectiva por ejemplo corre el riesgo que alguien este justo detrás de otro y entonces no se vea en la camara, pero hablare mas sobre estas mejoras mas tarde. 


Lo interesante del proyecto viene con el modelo de gen AI que entrene y utilize para detectar los puestos. Con aproximadamente 60 fotos, algunas del internet y algunas que tome yo mismo de esta oficina, entrene manualmente el modelo diciéndole que tiene que buscar en las imágenes. El modelo toma la misma foto del storage en un formato que pueda leer y es capaz de detectar donde hay puestos y cuales están libres. Básicamente, detecta objetos como las sillas, los monitores, y cosas que pueda significar un puesto de trabajo, si detecta por ejemplo una silla con una persona lo suficientemente cerca, se cree que el puesto esta ocupado.

A través de un poco de magia, estos resultados se suben a un documento de Excel como un 1 si esta ocupado o un 0 si esta libre el puesto. 


Estos números tienen un color correspondiente en power BI y el resultado final se ve asi. Este es un mapa que cree yo de este mismo área de trabajo, con las dos mesas, 8 sillas por lado, y el pasillo. 


Ahora, power BI tiene varias desventajas que intente mejorar en un programa de javascript y html. No consegui terminarlo, pero es una de las cosas que podría mejorar mucho el programa. Es mas personalizable, mas rápido, y mas fácil de expandir e integrar en aplicaciones o sitios web.

El también tiene espacio para visualizar mucha mas información si en el futuro se quisiera hacer, por ejemplo se puede añadir el nombre de quien ocupa el sitio, o cuanto tiempo lleva sentado allí, y hablare mas sobre las aplicaciones en un momento.

